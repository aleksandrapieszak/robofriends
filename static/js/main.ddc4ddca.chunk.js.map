{"version":3,"sources":["reportWebVitals.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robots","Error","SearchBox","searchfield","searchChange","react_default","a","createElement","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","key","value","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","response","json","users","_this$state","filteredRobots","filter","robot","name","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.ddc4ddca.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList= ({robots}) => {\r\n    if (true) {\r\n        throw new Error('NOOOO')\r\n    }\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return(\r\n                        <Card\r\n                            key={i}\r\n                            id={robots[i].id}\r\n                            name = {robots[i].name}\r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div className={'pa2'}>\r\n            <input\r\n                className={'pa3 ba b--green bg-lightest-blue'}\r\n                type={\"search\"}\r\n                placeholder={'search robots'}\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n    render() {\r\n        if (this.state.hasError){\r\n            return <h1> Ooooops. That is not good.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response =>response.json()\r\n            )\r\n            .then(users => {this.setState({robots: users})})\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n\r\n        if (!robots.length) {\r\n            return <h1> Loading </h1>\r\n        }else{\r\n            return (\r\n                <div className={'tc'}>\r\n                    <h1 className={'f2'}> Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport 'tachyons'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}