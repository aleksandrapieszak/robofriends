{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.b345ca56.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n\r\n    const {name, email, id} = props\r\n    return(\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src = {`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2> {name}</h2>\r\n                <p> {email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList= ({robots}) => {\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return(\r\n                        <Card\r\n                            key={i}\r\n                            id={robots[i].id}\r\n                            name = {robots[i].name}\r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div className={'pa2'}>\r\n            <input\r\n                className={'pa3 ba b--green bg-lightest-blue'}\r\n                type={\"search\"}\r\n                placeholder={'search robots'}\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n    }\r\n    render() {\r\n        if (this.state.hasError){\r\n            return <h1> Ooooops. That is not good.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response =>response.json()\r\n            )\r\n            .then(users => {this.setState({robots: users})})\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n\r\n        if (!robots.length) {\r\n            return <h1> Loading </h1>\r\n        }else{\r\n            return (\r\n                <div className={'tc'}>\r\n                    <h1 className={'f2'}> Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport 'tachyons'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}